package com.codeskraps.y2020.days

class Day18 : Day() {
    override val day: String
        get() = "Eighteen"

    override fun partOne(): String {
        var sum = 0L

        INPUT.forEach {
            sum += doEquationPartOne(it)
        }

        return sum.toString()
    }

    private fun doEquationPartOne(equation: String): Long {
        var sum = 0L
        var index = 0
        var op = ' '

        while (index < equation.length) {
            when (equation[index]) {
                ' ' -> index++
                '(' -> {
                    val endOfBracket = index + endOfBracket(equation.substring(index))
                    val eq = doEquationPartOne(equation.substring(index + 1, endOfBracket))
                    sum = doOperation(op, sum, eq)
                    index = endOfBracket + 1
                }
                '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' -> {
                    sum = doOperation(op, sum, Character.getNumericValue(equation[index]).toLong())
                    index++
                }
                '+', '*' -> {
                    op = equation[index]
                    index++
                }
                else -> index++
            }
        }

        return sum
    }

    private fun doOperation(op: Char, num1: Long, num2: Long): Long {
        return when (op) {
            '+' -> num1 + num2
            '*' -> num1 * num2
            else -> num2
        }
    }

    private fun endOfBracket(equation: String): Int {
        var index = 0
        var bracketCount = 0

        while (true) {
            if (equation[index] == '(') bracketCount++
            else if (equation[index] == ')') {
                if (bracketCount > 1) bracketCount--
                else return index + 1
            }
            index++
        }
    }

    override fun partTwo(): String {
        var sum = 0L

        INPUT.forEach {
            sum += doEquationPartTwo(it).toLong()
        }

        return sum.toString()
    }

    private fun doEquationPartTwo(equation: String): String {
        var result = equation

        while (result.contains('(')) {
            result = doBracket(result)
        }

        while (result.contains('+')) {
            result = doOperation('+', result)
        }

        while (result.contains('*')) {
            result = doOperation('*', result)
        }

        return result
    }

    private fun doBracket(equation: String): String {
        var newEquation = equation

        if (equation.contains('(')) {
            val index = equation.indexOf('(')
            val endBracket = index + endOfBracket(equation.substring(index, equation.length))
            val value = doBracket(equation.substring(index + 1, endBracket - 1))
            newEquation = equation.replaceRange(index, endBracket, value)
        }

        return doEquationPartTwo(newEquation)
    }

    private fun doOperation(op: Char, equation: String): String {
        val index = equation.indexOf(op)

        var start = index - 2
        while (start > 0 && NUM.contains(equation[start - 1])) start--
        val num1 = equation.substring(start, index).trim().toLong()

        var end = index + 2
        while (end < equation.length && NUM.contains(equation[end])) end++
        val num2 = equation.substring(index + 2, end).trim().toLong()

        val value = doOperation(op, num1, num2)

        return equation.replaceRange(start, end, value.toString())
    }

    companion object {
        private val NUM = arrayOf('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')
        private val INPUT = arrayOf(
                "(9 * 3 + 4) * (7 + (2 + 3 + 6 * 2) + 3) * 4 * 5",
                "(8 + 4 + 9 + (7 * 9 + 4 + 6 + 9) * 3) + 6 + 5 + ((8 * 2) + 2 * 9) * 5",
                "5 * 6 * 8 * (9 + 7 * 8 * 9) + 6 + 2",
                "9 * 9 + (4 * (6 * 7 * 7 + 4 * 6) * 5 + 6 * (2 * 5)) * (8 + 7 + 6 + 2 * 7) + 5",
                "5 + (7 + 3 * 7 + 9 * (7 + 7 + 4 + 3 * 3)) + 8 * 4",
                "(6 + 2 + 5 + 4) * 2 * 9 * 2 * 8",
                "7 + 8 + ((4 + 6 + 6) * 6 + 9 + 3 * 8 + 9) + 5",
                "3 + ((6 * 6 * 7 * 6) * 6 + 6 * 4) + (2 + 5 * 6 + 6 + (2 * 4) + 6) * 9",
                "(2 * (4 * 9 * 3) * 8 + 6 + (7 + 2 + 6)) * 6 * (5 * 4 + 8 + 7 + (7 + 2 * 3))",
                "8 * ((7 + 4 + 9) * 5 + 6 + (4 + 9 + 8 * 3 * 8 + 3) * 5 * (5 + 8 + 7 + 3 * 7 * 4))",
                "6 * 5 * 5 + (8 * 5 * 8 * 5 + 7) + ((2 + 2 * 6 * 3) * 4) * 6",
                "2 + 2 * 9 + 8 * (3 * 7 * 7 * (2 + 5) * 3 + 2)",
                "6 + 2",
                "9 * 2 + ((6 * 7 * 7 * 2) + 8) + (7 * (4 * 6 + 7) * 2 * 2 * 9) + 4 * 8",
                "(7 * 9 + 9 * 2 * 4 * 9) + 4 * 2 * 9 + 6",
                "6 * 3 + 7 + 9 + 9 + ((6 + 6 + 7 * 5) * 6 * 8 * 5)",
                "((8 * 8 * 6 + 6 * 4) + 3 + 3 + (3 * 5 + 3 * 5 + 4 + 7)) * 8 + (6 + 7 * 2 + 2) + (9 + 9)",
                "7 + 8 + 3 * 5 + (5 * 5 + 6 + 6) * (9 * 6)",
                "5 + 5 + 2",
                "((3 + 3) * 2 + (5 + 8 * 2 + 4 * 3)) * 8",
                "((5 + 6 + 5 * 8 + 4) + 9 + (5 + 5)) * (7 * 2 + (8 + 7)) + 9",
                "9 * (9 * 8) + (3 * 2 * (9 + 2 * 9 * 5) * 4 * 2) + 5",
                "4 * 4 + (2 + 5 + 5 * (3 + 6 * 4 + 7)) * (2 * 2) + 6",
                "6 + 2",
                "6 + 5 + (4 + 8) + 5",
                "6 * (4 * 6) + (4 * 5 + 4 + 5 + 9) + 7 * (2 + 7 + 9)",
                "9 * (3 * (5 + 9 * 4 * 5 + 3 * 9)) + ((4 * 4 * 3 * 6) * (9 * 8 * 3) * 9 * 9) + 3",
                "5 + (6 * (3 + 9 + 7 * 6 + 2) * (2 + 4 * 2 * 4 * 6) * 9 + 3) + 6 + 8 + 5 * 3",
                "8 + 9 * (8 + (3 + 2 + 4) * 4 + 3 * 4 * 5)",
                "9 + 5 + 8 + 9 * (8 + (4 * 2 * 9 + 8 + 7) * (8 + 6 * 3) * 7 * 7)",
                "6 * ((9 + 2) * (7 + 8 + 5 + 9 * 7) * 4) * 4 * ((7 + 7 + 4 * 5 * 2) + 2) + 9",
                "(4 + 9 * 8) * (6 + (7 * 6) * 9 + 8 * 2 * 7) + 4 + 9 + 3 * (6 + 8 + (8 * 4 + 7 * 3) * 8)",
                "(5 * 9 * 2 * 7 * 8 + 6) + (5 + 5)",
                "6 + 7 * 9 + 3",
                "((7 + 8 * 3 * 7 + 5) * 7 * 5 + 6 * 6 + 5) + 9 + 4",
                "(5 * 2 * 4 * 9 * 2 + (8 + 6 * 7 + 6)) + ((4 * 4 * 6 * 9 + 7) + 9 * 7)",
                "(3 + (5 * 8 + 4 + 4 * 7)) * 7 + 8 + (7 + (3 * 5 * 4 + 6 + 9)) + ((7 + 2 + 7 * 9 + 6 * 8) + 3 + 3 + (2 * 9 * 7) + 4 + (6 + 3 * 5)) * 9",
                "5 * 4 + ((6 + 8 * 5 * 6) * 8) + 7 + 7",
                "5 * (4 * (2 * 9 * 7 * 7) * 5) + ((6 * 2 * 9 + 2) * 3 * 2 + 7 + 3) + 9 + 8",
                "(7 + 3 * 3 * 6 * 2 * 3) * 6 + 3 * ((3 * 4 * 3 * 9 * 7) + 9 + 8) * 9",
                "((4 + 8 * 9) + 5 * 4 * 2 * 8 * 4) * (6 + 2 * (9 + 5) * 9 * 7 + 8)",
                "9 + 8 + (3 * 3 * (9 + 2 + 8 * 7 * 9))",
                "(5 * 8 * (7 * 2 + 8)) + 2 * 8 + 8 + 6 * 5",
                "2 + (2 * 9 * 5 + 4) * (5 + 9 * 3 * 4) * 4 + 2",
                "8 * 2 * (7 * 7 * 4 + 5 + 9 + 4)",
                "4 * 9 + 2 * 8",
                "6 + 2 + ((5 + 3 * 5 + 7 + 9) + 4 * 6 + 6) * 5",
                "(8 * 3 * 7) + (4 * 5 + 8 * 7 + 6)",
                "3 * 7 * ((3 + 3 * 5 + 9 + 7) + 9 * 2 + (4 + 3))",
                "(4 + 2 * 2 + 3 * 2 + 2) * 4 + 2 * 4 + 6 + 3",
                "((9 * 7 * 7 + 8) * (2 * 5 + 2 + 3) * 2 * 4 * 7) * 9 + 5 + 5",
                "4 + 9 * 2 + 5 + (3 + 5 + (4 + 3 * 3 * 7 * 5 * 8) + 9 * 2 * 2) * (4 + (2 * 6) + 7 * 5 * 7 + 2)",
                "6 + 2 * 4 * (6 + 8) * (4 + 2) * 3",
                "3 + ((8 + 8 + 6) * 5) + 9 + 7 + ((7 * 2 * 9 + 5 * 3 + 5) + 3 + (2 * 5) + 3 + 5)",
                "4 + 2 * 6 + 6 + 6",
                "(5 * (4 * 9 * 8 + 5 * 8) * 6 * 9 + 3) * ((2 * 7 * 3 + 3 * 4 * 3) + 9 + 8 + 8) + 4",
                "4 * 4 + 9 * 9 + (2 * (6 * 5 + 9 + 7 * 3) + (2 * 8 + 3 + 2 + 3))",
                "6 * 4 + 5 * (6 * (6 * 7 + 2 * 6 + 4 * 7)) * 4 + ((5 * 9 * 8 * 9 * 5 * 5) * 5)",
                "3 + (5 * 4 + (3 + 6 * 2 + 8 + 7 * 8) + 3 + (9 + 8 * 6)) * (5 + 6 * (8 * 9 + 4 * 9 + 5) * 7 * 5) + 5",
                "9 + 2 + 9 + (3 + 9) + (4 * 4 + 7 * 5) + 5",
                "5 + 6",
                "6 + (7 + 2 * 6 * 9 * 7 + 5) * 9 + (4 * 5 * 8) + 2 * 3",
                "8 + 7 * (9 + (9 + 3 * 3 * 7) * (5 + 6 * 3 * 7 + 8 * 2)) * 7",
                "(5 * 7 + 5 + 3 + 6) * 8",
                "5 + ((9 + 5) + 9 + 4 * (5 * 4 * 7 + 3) * 3)",
                "5 * 8 * 7 + 8 * ((8 + 9 + 3 * 6 * 5) * 4 * 9 + 4)",
                "8 * (6 + (6 + 9 * 7 * 8 * 7) + 7 * 2) + ((2 * 9) * 7) + 4",
                "6 + ((4 + 5 + 6 + 7) * 7)",
                "8 * (5 * 6 * 4 * 8 + 6 * 6) + 2 * 9",
                "7 + 3 + 2 * (6 + 8)",
                "9 * ((4 + 4 * 9 + 6 * 8 * 7) + 9 + 2 + 6 * (4 * 9 + 7 + 6) * 3) * 5 + 7",
                "((2 + 3 * 2 * 9 + 6) + 4 + 8 * 2 * 5 + 8) * 5 + 5 + (9 * 6) + 9 + (3 * 2 * 8)",
                "4 + (6 + 2) * 9 + (5 + 4 * (8 * 3 + 7 + 6) * 4) * ((7 + 2 + 3) * 6 + 9 * (6 + 7 * 2))",
                "6 + 2 + ((2 * 4 * 8) * 2 * 4 * 7 + 9) * (7 + 8 + (6 + 7 * 9 + 9 * 7) + 4) * 8",
                "9 * 9 + 7 + 9 * (9 * 4) * 9",
                "(7 * 3 + (3 * 7 + 4 * 4 * 8) * 2 * 2 * (3 * 3)) + 8",
                "9 * 6 + 3 * (2 * 5 * 7 * 7 + 7) * 8 + (2 + 4)",
                "(8 * 9) + 8 * 6",
                "(3 * 2 + 6 + (7 * 8 * 5 * 4)) + 5 * 6",
                "4 + 3 + (9 + 3 + (2 * 9 * 6) + 7) * 8 + 3 * 8",
                "9 + 6 * 8 + 4 + 9 * (9 * (8 * 4 + 9) + 3)",
                "5 + 4 * 6 * (8 * (2 + 9 + 6) * (6 * 3 + 2) + 6) * (8 * 8 * 3 * (6 * 9) * 3 + (4 + 4 + 2 * 2 * 6)) + 6",
                "4 + (6 + 6 * (4 * 7 * 7) + 5) * 5 + 6 * (7 + 2 * 4 * 2 + 9 + 9)",
                "((8 + 7) * (7 + 5 * 9) + (9 + 2 * 6 * 2) + 6 * 7) * (3 + 3 * 2 + 3 + 7) * 4 + 7 * 7",
                "(6 + 9 * 7 * 4 + 7) * 6 + 7 + 5 + 3 + 8",
                "9 + 2 + (9 * (8 * 9 * 2 * 6 + 2 + 5)) + 6 + 4 + 8",
                "6 + 4 * ((2 * 9) * 6 * 5) + 2 * 9",
                "(6 + 8 * 2 + (5 + 2 * 7 * 7) * 5 + 4) * (2 * 3 + 8 * (9 + 6 * 4 + 3 + 6 + 4) * (2 + 5 * 8 * 2 + 4))",
                "3 + (9 * (2 * 7 * 6) * 9 + 7 + 3) + (7 * (5 * 6 + 7) + 3 * (5 * 7 * 5 * 4) * 8 + 6) * 4 * 5 + 9",
                "(6 + 6 + 4) + 3 * 4 + 3",
                "9 * (2 * 7 + 9 + (4 + 2) * 5) + (2 + 5 + (7 + 6)) * 8",
                "2 * (6 * 6 * 9 + 8) + 4 * 2",
                "((4 * 3) + 8) + 5 + 5",
                "5 + 8 * 7 + 6 + 6 * ((9 * 2 * 5 + 4 * 7) + 8 + 6 + 5 + (3 + 7))",
                "8 + (8 * 8 * 8 * (3 * 7 * 8) * 4) * 8 + 5 * 8 * 3",
                "(8 * 3 * 8) * 4 * 3 * 3 * 6",
                "5 + 6 * (9 + (5 + 6 + 8 + 3 * 4) * (6 * 3 + 3 + 4 * 6 + 2))",
                "3 * (2 * (5 * 9) * 5 + 8 + 5 * 6) * 8 + (8 + 5 + 7 * (6 + 5 + 9 * 2 * 9) + 2 * (3 * 2 * 2 + 9 * 4))",
                "(2 * 8 + 5 + 7 + (8 + 2 + 7 * 5 * 5 + 4) * 2) + 5 * ((8 * 7 + 5) * 3 * 4 + (4 * 7 * 6) * (7 + 6 + 4 + 7 * 7) + (8 * 7 + 2 * 2 + 9 + 3)) + ((4 + 8) + 9)",
                "3 * (8 + (2 + 9) + 2 * 8 + (9 * 4 * 9)) * 2 * 3 * 4",
                "(4 + (9 * 4) + 5) * 8 * (3 + 7 * 3 * 7 + 4) * 7 * 2",
                "2 * 4 * (2 * 8 + 9 + 7 + (8 * 3 * 6 + 3 + 5) + 9) + (5 * 8 * 8 + (4 * 5 * 2 + 4 * 2 + 5) * 4) + 2 * 6",
                "7 + 8 + ((5 + 7 + 2 + 9 * 4 * 3) * 4) + 7 + 6 + 8",
                "((4 + 4 * 4 * 9 * 6 + 9) * (7 + 9) * 2 + 8) * 8 * 6 + 9",
                "(2 * (6 + 7 * 3 + 6 * 7) + 4 * 2 + (3 + 8 + 9) * 8) * 8 + 8 + 8 + (2 + 8 * 5 * 9)",
                "(7 + 5 + (7 + 9 + 5) + 2) * 4 + 9",
                "3 * 6 + 8 + 2 * 7",
                "6 + 2 + ((7 * 6 + 3 + 4) * 8 * (2 + 6 * 5) * 6) + 4 * 2",
                "(4 * 8) + 7 * 3 + 3 * 7 + 5",
                "5 + 6 + 3 + 7 * (2 * 7) + (5 + (3 + 4 + 3 + 4 + 7) + 8)",
                "2 + ((4 + 7 * 6) + 8 + 9 * 6 * 9)",
                "(6 * 2) * (7 + 5 * (7 * 6 + 7 + 3 + 8 + 7) + 2 + 5 + 8) + 6",
                "(3 * 2 * 8 + 7) + (5 * 4 * 9 + 6) + 4 * 3 + 4",
                "8 + (8 + 2 * 3 + 2 + 2)",
                "(7 + 8 * 5) * (3 * (9 + 5 + 6 + 9 + 3 + 9) * 3) + 8 + 7 * (5 + 9 + 3 * 2 + 4 + 5) + 4",
                "7 * ((6 * 7 * 2 * 9 + 8) + 8 * 6 * 8 * 5) * 2 + 3 + 8 * 3",
                "(4 + (5 * 7 + 3 + 4 + 9)) * 7",
                "7 * 5 * 2 * (4 + 4 + 6 + 3 * 7) + (8 * (6 + 2 + 8 * 9 + 6) * 3 * 6 + 3 + (4 + 5 + 9)) * 7",
                "3 * 4 + 2",
                "((6 + 9 + 5 + 4 + 9 * 7) * 9 + 8 + (9 * 2 * 6 * 4 * 7 * 3)) + (8 + 6 + 7 + 4) * 9 * (8 * 5) + 7",
                "(9 * 8 + 4) + (3 * 4 + (9 * 5 * 3 * 4) * 9)",
                "(7 + 8 * 3 + 6 * (4 + 5 + 7 * 8 + 9) + 4) * 3",
                "((7 * 4) + (6 * 7 * 6) * 7 + 9 * 3) + 2 * (4 + 8) + (4 * 5 + 8 + 8 + 5) * (4 + 9) * 5",
                "(2 + 3 + 7) * 6 + 8 + (4 + 7 * 6 * (3 + 4 + 4 + 7 * 6) * 8 + 3) * 4",
                "6 * (8 * 3 + 4 * (6 + 9 * 2 + 3 + 8 * 5) * 8 + 6)",
                "8 + ((2 * 8 + 5 * 5 * 5 * 3) * 9 + 5) + 9",
                "(8 + 4 * 9 * 8) + 5 * 5 * (7 + 7 + 2 * 9 + 8 * 6) + 6 * (6 * 6 + 6 + 3 + 9 * 8)",
                "5 * 9 + (5 + (9 * 5 + 7) + (2 + 2 * 7) * 4) * (9 * 9 + 5 * 4) + 9",
                "7 + 7 * (2 * 9 * 6 + 3 + 5)",
                "2 + (8 * 9 * 7 * (4 * 9 + 9 * 4 + 5) + 4 * 4) + 5 + 2 + 8",
                "(2 + (4 + 9 + 4 * 7 * 3) + 4 + 8) + (2 + 4 * 5 * (3 + 4) + 8 * 5)",
                "2 + ((7 * 8 + 6 * 6) * 4 + 6 + 7 * 6 * 9) + ((7 + 9 * 5 * 5) + 4 * 9 + 6 + 7) * ((6 + 9 + 4 * 7 * 2) * 7 + 9 * (7 + 2 + 3 * 3 + 5) * 5)",
                "(3 * 8 + 2 * 2 + (3 * 7 + 8 * 5 * 6) + 6) + 4 + 5",
                "8 + 5 * 8 + 7 * 2",
                "(3 + (6 * 9 * 8 + 4 + 8) * 4 + 2) + 8",
                "(7 + 7) + 5 * (9 * 2 + 9) + ((4 * 3 * 3 * 4 + 4 * 9) * 8 * 8 + (3 * 9 + 7 + 8) * 3 + 9)",
                "(6 + (5 + 7 * 5) * 8 * 9) * 6 + 3",
                "3 + 2 * (5 * 8) + 5 + 6",
                "7 * 4 + 7 + 7 * 4 * (4 + 9 * 6 * 5)",
                "3 + 4 + (6 * 9) * (6 + (5 * 5 + 6 * 8) + 9 * (7 * 3 + 6)) + 8",
                "4 + 4 * 6 * ((4 * 3 * 2) * 4 + 3 + (7 + 8 + 7 * 6 * 9 * 3)) * (5 + 8)",
                "(6 + 7 * 8 + 3 + 9) * 5 * 3 * 3",
                "8 + 5 + 3 * 8 * 2 + 9",
                "(9 * (5 + 8 + 4 + 4 + 9 + 4) * 2 + 7 * (6 * 4 + 7 + 4 + 8)) + 9 + 5",
                "7 + 7 * 3 + 8 * ((5 + 3 * 4 * 9) * 4 * 6 * 8)",
                "2 + 5 + 8 + (3 + 3 * 4 + 8)",
                "5 + 4 * 3 * 9 + ((5 * 2 * 2) * 5 + 4 + (4 * 2))",
                "(3 * 7 + 2) * 3",
                "8 + 7 * 3 + 9 + 9 * 5",
                "2 + (2 * 6 + 3 + (4 + 3 + 4 + 2 + 7 * 9)) + 8 + 2 * 7 * 9",
                "(4 * 4 + 4 + 7) * 8 + 5",
                "2 * (5 * (8 * 5 * 2 * 6 * 8) * 6 * 3 + 8 * 8)",
                "8 + 3 * 9 + 5 * 9 * (5 * 7 + 6 + 5 * 3 + 7)",
                "2 + (3 + 7) * 8 * 9",
                "7 + 9 + 6",
                "4 + (6 + 7 + 8 + 4 * 5) + 2 * 6 * 8 * 2",
                "(9 + 3 * 7 * 3) * 8 + (9 + 5 * 2 * 8 + 3 * 4) * 8 + 2 * 6",
                "4 + 2 * 3 * 6 * ((3 * 5 * 3) * 2 + 6 + 5 * 4)",
                "3 + 9 * (7 * (8 + 7) * 9 * 7 + 7)",
                "6 + 3 * 6 + 4 * (7 * 7 + 2 * 9 + 4 + 2) + (6 + 6 + 6 + 7)",
                "(5 * 4) * 6 * (5 + 4 + 5 + 3 * (8 * 6) * 5) * 7",
                "(8 * 4) + 2 * (2 * 2 * (9 * 9 + 8) + 8 * 9 + 6) * 7",
                "3 + 5 * (4 + 9 + 3) + 9 * ((5 * 2 * 4 + 2) + 6 + 7 + 7 + 5)",
                "(3 + (9 + 7 * 3 + 6 * 6)) + 9 * 7 * 4 + (9 * 4 * 9 + 7 * 7 * 7)",
                "(3 * 7) + 4",
                "4 + (2 + 5 * 5) + 6 + 2 * 8 + 9",
                "8 * (6 * (7 * 3) + 8 + 5 + 8 + (8 * 2 + 6 + 9 + 4 * 3))",
                "7 * 8 * (5 * (2 * 6 * 9) * 3 * 6 * (6 + 8 + 5))",
                "(5 + 9 * 4 * 7 * 7 + 8) + 4",
                "((8 * 9 * 6 + 4 * 6 + 3) * 6 + 2 * (4 + 8) * 7) + (4 + 4) + (7 + 7 * 7 * (4 + 5 + 2))",
                "(4 + (8 + 4 * 4 * 2 + 4) + 7 + 6 * 2 + 6) * 9 + 3 * 3 * (9 * 9)",
                "(9 * 5) * 6 + ((5 + 3) + 9 + 4)",
                "7 + ((8 * 9 * 5 + 2 + 2 * 7) * 9 * 3 * 7 * 2) * 6 * 2 + 6 * (9 * 4 * 2 + (2 + 7 + 5) * 4 + 7)",
                "8 + (5 * 4 * 7 + 2) * 6 + (6 * 3) * 4",
                "7 + (9 + 9 * 4 + 3) * 8 * (9 + (6 + 9 + 2 + 6 + 8) * 9 * 7 * (2 * 8 * 5 * 8)) * (4 + 7 + 8 + 2)",
                "6 + 3 * 5 * 8 + ((9 + 5 + 6) * 9 * (3 + 7 * 8 + 6) * (2 * 9 + 5)) + (7 + 6)",
                "5 * (9 + 7) + 2 * 4 + 3",
                "7 + 2 * (5 + 6 + 9 + 4 * (7 + 6 * 5 * 6 + 8) * 4) * 6 + 4",
                "6 * 8 * 8 * 4 + 8 * (2 * (9 * 4 * 7 + 9) * 5)",
                "8 * 4 + (4 + 7 * 3 + 5 + 8) + 4 * 7 + ((4 * 9 + 3 * 8) * 5 * 6 + 7 + 5 * 4)",
                "(9 * 3 + 3) + 9 + ((9 + 9 + 6 + 8) * 9 + 7) * 4 + 9 * ((8 + 7 + 8 * 2 + 8) * 5 + 8 + 3 * (3 + 5 + 2 * 6) * 8)",
                "(8 * 4 * 3) + (4 * 3 * 8 + (5 * 9) * 3 * 9) + 9 + (4 * 2) + 9 + 4",
                "2 * 5 + (9 + (5 + 2 * 2 * 7 * 3 * 9))",
                "(4 * 2 + 8) + (4 + 5 + 3 + 9 + (9 * 2 * 4) * (2 * 6 + 6))",
                "9 * 5 + 2 * ((3 * 3 + 3 + 9 * 7 + 9) * 3 * 3 + 6) + 7",
                "8 + (5 + 4 + 9) + ((6 + 9 * 6) * 8 + 3 + 6 * 8 * 6) * ((6 + 4) * (3 + 5 * 7 * 9 * 4 + 3) + (2 * 4)) + 4",
                "5 + 7 + (5 + 2 + (5 + 6 * 2) * 7) + 4 * 4",
                "(7 * 8 * 8) * (3 * (2 * 3 * 4 + 3 + 5 + 6) + 2 + 9 + (7 + 5 + 7 * 9) + 9) + 2",
                "2 * 8 + ((4 + 9 + 6 + 8 * 2 * 9) * 9 * (5 * 7 + 7 * 4 + 3 + 9) * 3 + 2 * 8) * (3 + 7 * 7 * 5 * 3) * 9 * 8",
                "6 * 8 * (5 * 7 + 3 * 2 * 3 + 4) + 7 + (4 + 2 * 8 * 8) + ((9 * 4 + 5) * (7 + 6 + 2 * 4))",
                "4 + 9 + (9 + 5 + 3 * 8) * 5 * 9",
                "5 + 2 + ((6 + 8 + 3 * 7) * 6 * 5 + 8 + 3 * 9) + 6",
                "3 + (7 + (3 * 6 * 7) + 9 * 2 * 2 + (9 * 4)) * 8 * 8 * 6",
                "((5 + 9 + 8 + 6) + 4 + (3 * 4 + 8) * (2 + 5 * 2 * 6)) + 9 + 8 * 2",
                "8 * 9 + 2",
                "(3 * (3 * 5 * 2 * 3 * 3) * 3 * 7) * 3 * 6 * 5 + 8",
                "6 * 8 + 6 + 9 * 9 * (7 * 2 * 5 * 3 * 4)",
                "(8 + 2 + 4 * 3 + (4 * 6 + 7 * 2)) + (6 + 8) + 8",
                "9 + 4",
                "((4 + 8) + 8 * (4 * 5 + 8 + 2 + 8 * 9) + 7 * (3 * 7 * 4 * 8) + 4) * 6 * 7 * (2 * 3 + 6)",
                "6 + (4 + 5 * 9) * 6 + 9",
                "(4 * (5 * 3 * 3 * 7 * 2 + 7) + 4) + 4 * 8 * 4 * 3",
                "8 + (9 + 8 + 9) * 5",
                "9 + 8 + 8 + 9 * (8 * 3)",
                "(6 + 8 * 5 * (5 + 7 * 8 + 4 + 3) * 6 + 4) * (2 * 4 * 5) + 7 * 8 + (9 * 6)",
                "((9 + 2 + 5 + 5 + 5) + (9 + 6 + 7) * (7 + 5 + 9 + 5 * 6)) * (4 + (7 + 8 + 9 + 7) * (7 + 7 + 6 * 4 + 2) + 5 + 5 + 6) * 3",
                "7 * (6 + 8 * 6 * (5 + 6 + 5 * 4) * (9 * 2 * 6 * 4 + 8)) * 2 + 9",
                "(7 * 3 * 3 * 9 * 4) + 9 * (9 * (8 * 8 + 2 * 8 + 3 + 6) * 5 + (4 + 3 * 3 * 4 + 5 * 8)) + 9 * 4",
                "(7 + 3 + 4) * (2 + (4 * 7 + 5 * 3 * 7) * 4 * (3 + 5) + 8 * (8 * 9 + 2 + 7))",
                "7 + (8 * 7 * 2 + (7 + 6 + 8) * 3 * 3) + (4 * (7 * 7 + 4 * 7 * 4) + 7 * 5 + (6 * 6 + 4))",
                "5 + 3 + 4 + (2 + 4 * 5 * 2 + 8)",
                "(3 + 3 + 2 + 9 * 4) + 7 + (2 * 8 * 7 * 3 + (3 + 9 + 9 * 2)) + 7 * (9 * 7) + 2",
                "7 * 5 * (4 * 8 * 4 * (7 + 6 * 5 * 5 + 7 * 9)) + 9",
                "(2 * 5 + 2 + (6 + 3 + 4)) + 2 + ((6 + 8 + 9) * 4) + 2",
                "8 * (2 * 9 + 3 + 2) + 9",
                "(5 + (5 + 9 * 5 + 5 * 4 * 9) * 7) + (8 * 8 * 9 + 8 * 3) + 3 + 6 * 5",
                "8 + (7 * (7 + 9) + 3)",
                "(7 + 4 * 5 + (8 + 2 + 7) * 7 + 8) + (9 * (9 * 8 + 7 + 9 * 4)) * (4 + 9 * 5) + 2",
                "(7 * 5 + 6 * 5 * (2 * 4 * 3 + 4 + 7)) * 5 * (7 * (7 + 3 * 4) * 9)",
                "4 * (6 + 9 * 3) + 9 + 5 * 9",
                "(9 + 3 + 8 * 7 * 2 * 6) * (8 + 7 + 2 + 7 + 6) + (5 * 6 * 6 + 3) + 2 + 9",
                "5 * 5 + 6 + (3 * 7 + 6)",
                "2 * 7 + (5 * (5 + 8 + 9 * 5 + 3) + (3 * 2) * 3 + 7 * 2) + 2 + 5 + 3",
                "(9 * 5 * (4 * 9 * 6) + 3 * 8) * 2 * 8 * 4 * ((3 * 7 * 9 + 5) + 6 * 7)",
                "5 * 9 + ((9 + 4 + 5 * 7) + 4 * 3 + 6 * (2 * 2)) + 7 + 2",
                "2 * (6 + 2) * ((6 + 3 * 8 * 3 + 7) * 7 * 5 + (9 + 2 + 3 * 9 * 8 * 8) * 7) + (9 * 9 + 8 * 7 + (9 * 3 * 8) + 9)",
                "4 + 2 * 2 * 5 + 5 * 4",
                "4 + 4 * 8 * 7 + 3",
                "9 + (3 + 8 * (4 * 2 + 3 + 4) + 5 + 8) * 8 + 4 * 7 * (4 + 3 * 9 * 4)",
                "6 + (3 + 2 * 2 + 3 + 7 * 8) * 4 * 8 + 2",
                "(7 * 4 + 5 * 2 * (5 * 8 + 3 + 6 * 2)) + (7 * 2) * 9 * (7 + 7 + 5) * (8 + 2 * 9) * 6",
                "3 + 9 * (7 + 2 * 6 + 2 + 5) * 4",
                "9 + (8 * 2 + (8 + 8 + 8)) * 8 + 7",
                "6 * 7 * 7 * 4",
                "2 * (2 + (4 + 7 * 7 + 6 * 8)) + 4",
                "(9 + 8 + (5 + 9 + 4 + 9 * 6 + 3)) * 4",
                "6 + ((9 + 2 + 4 * 2 + 9) * 7 * 3 + 5 * 6 * 6) + 7 * 4 * 9",
                "(5 + (5 + 9 + 6 + 7)) * 5 + 4 + 6",
                "(5 * 8 * 6 + 8 + 7) * 2 + 7 + 8 + 5",
                "(7 * 5 + 6 + 5 * (6 + 4 * 9)) + 4 * 8 + 3",
                "4 * 9 * (8 * 5 * 3 * 9 * (4 * 2 * 3 * 4) * 3) * ((5 + 5 * 3) + 9 * 4 + (9 + 6) * 2 * 6)",
                "7 * ((3 + 8 * 3 * 6 * 8 * 6) + (8 * 3 * 7 + 4 * 2 * 5) * 5 * 8 * (7 + 9 * 4 + 6 * 2 * 8) * 4) + 7 + 7",
                "(7 * (7 + 4 + 4 * 5 * 5 + 2) * 2 + 5 * 6) + 2 * 5 + 3",
                "(2 + 7) * 6 * (3 + (9 * 4 + 8 * 8 + 5) + (2 + 7 * 5 * 5) * 5 + (3 * 6) * 2) + (8 + 5 * 9 + 9 + 8)",
                "6 * 5 * 3 + 7 * (4 + 2 + 7 + 9)",
                "(9 + 6 + (2 + 2 + 5 + 6 * 5 * 8)) + 7 * 2",
                "((7 + 7 * 9) + (5 + 8 * 2 + 4 * 7 * 7) + 7 * 3) * (8 + 2) + 7",
                "3 + 6 * (8 * 7 * 3 * 7) + (5 + 4 * 3) + 6",
                "(7 + 7) + 9 + (5 * (5 + 9 * 3 + 3 * 2 + 3) * 4 * (8 * 7) * 2 * (7 * 9 * 6 + 4 * 6 + 2)) + 6",
                "((6 * 2 * 6 + 3 * 8) + (9 + 8 + 9 + 2 + 3 + 5) * 7 * 9) + 8 + 6 * 3 + 6 + 7",
                "((9 * 8 + 2) * 8 + 6 * (4 + 8 + 4 * 9 * 9) + 9) * 7 * 5",
                "8 + 6 + (4 + (6 + 6 + 3 + 9)) + 3 * 3 + 4",
                "8 + (3 + 5 * 9 + 3) * 9 + 8 + 8 + 7",
                "5 + (3 * 4 + (8 + 4 + 3 + 4) * 8 + 7)",
                "(9 * (6 * 7 * 9 + 5) * (7 + 6 * 2 * 4 + 2 + 8)) + 4 + 8",
                "3 * 5 * (9 + 2 * (9 * 6 * 7 + 9) + 2) * 7 + 6",
                "4 + (3 * 7)",
                "(3 + 7 * 9) * 6 * 6 + 3 + 3 + (2 + (9 * 4 + 6 + 7 + 9))",
                "(4 * 2 * (9 + 5 * 9 + 5 * 9 + 9) + 8) * 7 * 7 * 3 + (9 * 4 * 7)",
                "3 * (4 * 5) + 9 + ((7 * 8 * 4 * 8) + 7 * 3)",
                "8 + 9 + 4 * 4 * ((5 + 3 * 6) * 5) * 6",
                "9 + 8 + (9 * 9 + 4) + 5",
                "9 * ((8 * 7 * 2 + 4 + 8) * 9 + 5 + (2 + 4 + 6 * 7 * 3 + 3) + (7 * 9 * 2 + 7 * 9) * 3) + (6 * (9 + 7 * 3 + 7 + 6) + 6 + 6)",
                "4 * ((5 * 7 * 9 * 9 * 4) + 2 + (5 * 5) * 2 * 7 * 9) * 4 * 7 + 2 + 9",
                "9 + (7 + 5) + 4 + (3 + 2 * 4) * 8 + 7",
                "(8 * 7 + 7 + 6 + 7 * 6) * 5 + 7 + 5",
                "9 + 5 * 5 * (3 + 8 * 4 + 8 + 4 * 5) + 3 + 4",
                "4 * 5 * 6 + 6 + (7 * 7 + 6 + 4 + 4 * 3)",
                "(4 * 2 + 9) + (4 * 3 + 9) * 9 + 8",
                "9 * 6 + ((7 + 2 + 6) + (2 + 2 * 3)) * 6",
                "((5 + 6 + 6 * 6) + 8 + (3 * 8 * 3 * 3 * 6) * 4) * (2 + 6 * 7 * 6 * (3 + 5)) * 6 * 2",
                "(5 * 3) + (2 + 9) + 2",
                "4 * 8 + 6",
                "2 + 6 + 2 + 4",
                "5 * 8 * (9 * 2 * 8) + 8 + 9 + 4",
                "5 * (4 + 7 * (5 * 7 * 6 * 5 * 8) + (6 + 3 * 6 + 3 + 7) * (7 * 5 * 8) * 4)",
                "5 * 9 + 5 + 5 * (9 * 2 + 4 + 9 * 7 + 4) * 7",
                "5 + (4 + 7 + (9 + 7 + 5) + 9 * 6 * 3) * 5 * 3 + 5",
                "(7 * 8 * 7) + 6 + 2 * 4 + 6 + 4",
                "(2 + (4 + 4 + 6) + 9 + 5 * (2 * 7 * 3) * 2) + 7 + ((9 + 5) + (5 * 3 + 8 + 5 * 6 + 8) * 2 + 7) * 9 * 3",
                "(2 * (9 * 5) + 9 + 4) + 8 * 7 + 8 + 8 + 8",
                "2 + 3 * 3 + (7 * (9 + 5) + (8 + 6 + 8 + 2) * 7 * 2 + (7 + 8 + 9 * 3)) + 5 + 9",
                "5 + 4 + (7 * 3 * (2 * 6 + 2 * 3) + 3) * 7",
                "9 + (3 + (7 * 3) + 7 + 3) + 5 + (7 * 3 + 7)",
                "7 + 4 * 2 + 4 + (8 + 3 + 7) * 5",
                "9 * 4 + (6 + 9 + 3)",
                "2 + 3 + 7 + 7 + 8 + ((4 * 7 + 9 + 8 + 6 * 3) * 3 * 7 * 9 * 6 * 7)",
                "(7 * 9 * 4 * 2) + (3 + (5 + 2 + 4 + 6 * 8 * 5) + 5 + 5) + 4",
                "(6 * 2 + 8 + 3) * ((8 * 3 * 9 * 2 * 7) * 4 + 9 + 6) * 6 + 8",
                "(3 * 5 * 8 * 4 + (2 * 5) + 2) + 5 * 8 * 5 * 3 * 4",
                "4 + (9 + 7 * (6 + 3 + 9 + 7))",
                "(9 * 2 + 3 + 7) * 7 * (8 * 2 * 7) * 3 + 4",
                "6 * (8 * 2 * 8 + 8 + 9 + (4 * 7 * 4 + 9 + 5 + 5)) * 4",
                "5 * (2 * 4) * 6",
                "4 + 4 * 4 + 6 + ((5 + 3 + 2 * 2 + 4) * 3 * 2 * (7 + 7 + 8 + 6 + 3) + 2)",
                "7 * 6 * 8 + (9 * 9 + 3 + 9 + 3 * 7) + 3",
                "8 * (2 * 8 * (2 * 4 + 6 * 4 * 8)) * (9 * 3 + 8 * 3 * 8 * (6 + 8 + 6 * 7 + 3)) * 6 * 6 * 7",
                "(3 + (7 * 7 * 4 + 2 * 4 + 7)) + 6 * 5 + 9 + 4",
                "(2 + 2 * 3) + (3 * 3 + 2 * 3 * 5 + 9) + 8 * (8 + 9 * (9 + 9 + 2 * 9) + 9 + (6 + 3 * 7) * 5) * 4",
                "4 * 8 * 3 + 5 * (6 * (5 * 4 + 9 + 4 * 6 * 3)) + 9",
                "4 * ((7 + 4 * 8) * 2) * 6 * 6 + (7 * 4) * 2",
                "7 + 3 * 3 + 6",
                "2 * (3 + (6 + 5) + (3 * 2 + 6) + 4) + 6 * 7 * (5 * 2 + 3 + 9 * 9)",
                "(7 * 5 * (8 + 4 + 6 + 3 * 5)) + 2 * 9",
                "3 * 4 * 7 * (7 + (5 + 7)) + 9",
                "9 * ((9 + 7) + 3)",
                "5 + ((6 * 2 + 8) * 7)",
                "7 + 2 * (6 + 6 + 6 + 3) * 2",
                "(9 + 3 * (4 + 8 + 5 + 5 + 7 * 9)) * ((7 * 5 * 9 * 2 * 6) + 5 + 6 * 3 + 9) * 8 + 7 * (5 + 6)",
                "3 + ((8 + 5 * 9 * 6 + 6) * 2 * 5 + 9 * (8 * 5 * 8 + 4 + 9 * 2) * 8) * 8 + 7",
                "3 + 2 * 3 + ((9 + 3) * 9)",
                "8 * (2 + (6 + 2 * 8)) * 2 * 7 + 8",
                "(4 + 9 * (8 + 4 * 2 + 9 * 6 + 8) * 6 + (8 * 9) + 3) * 6",
                "3 * (3 * 9 * 5 * 6 + 2 + 4) * 9 * (8 * 4 * 7 * 7 * 8 * 3) * 5",
                "8 * 2 + (7 + 4 + 5 + 2 * 4 * 8) + (2 * 4 + 7 + 4) * 4",
                "(7 + 9 + 9 * 6) * 6 + 9 * 8",
                "5 + 8 + 3 * 3 + (6 + (9 * 8 + 8 * 5) + (3 * 5 * 4))",
                "(2 * 9 + 3 * 9 * 8) * (6 + 6 * 8) * 9 * 4",
                "2 * (8 * 9 + 4)",
                "2 + 5 * (5 * 4 * 9 * 3 * 8 * 3) * 8",
                "9 * 9 * (7 * 3 * 4) * 8 * 8",
                "4 + (9 + 8 + 6 + 8) * 9 + (6 + 6 + 9 * 5) + 9 + (8 + 4 * (5 + 6 + 3 * 6 + 6) + 5 * (8 * 3 * 8 * 3 * 7 * 2))",
                "(5 * 8 * 7 * 5 * 2 + 4) * 6 + 8 * ((4 * 5 * 9 + 3 + 2) * 4 + 4)",
                "2 * 9 + (9 * 7 * 8 * 6 * 7 * 9) + 4 + (7 + (3 + 9 * 5 + 5 + 2) + (6 * 3 + 2 + 7 * 7)) * 7",
                "7 * 3 * 7 + (2 * 2 * 4) * 5",
                "(2 + 8 * 6 * 3 * (6 * 5 + 9 + 3 * 8 + 8) + (3 + 6 + 9 + 4 * 3 * 6)) + 4 + (3 * 4 + 2 + (5 * 3 * 7 + 5 + 9)) * ((2 + 3 + 6 + 6 * 4 * 2) + 4 * 9 + 7 * (6 + 2)) + (6 + (8 * 7 + 2 + 2) + 8) * (7 + (9 + 3 + 9))",
                "7 * 4 * (7 + 5 * 3 + (9 * 2 * 5 * 2) + 9 + 2) * (5 + 4 * (8 + 8 * 6) + 2)",
                "7 * (9 * (7 + 4 * 3 + 8 + 3) + 8 + 8) + 9",
                "((8 + 6 + 4) + (9 + 6 * 7 + 4) + (6 + 9 * 5 + 4) + 3) + 5 + 9 + (9 + 9 * 7) * 3 + 2",
                "8 + 4 + (9 * 9 + 2 * 8 + 4) + 5 * 4",
                "9 * (3 * (7 + 8 * 7 * 8) + 5 * 7 * (5 * 6 + 7 * 4 + 6)) + 9",
                "(8 + 3 * 6 + 8 + 8) * 5 * 3",
                "((5 + 7 + 4 + 2 * 6) + (6 * 4 + 6 * 3 + 8) * 5 + 8 + 8 * (5 * 6 + 2)) + (2 * 4 + 9 * 7 * 6 * (9 * 6 + 6 * 8)) * 6 * 9 + 3",
                "((3 * 7) * 7 * 2 * 8 + 2 * (2 + 6 + 7 * 3 + 2 * 5)) + (6 * 3) * (4 * 5 + 4 + 9) + 6 + (9 * 7 * 5 + 5 * 9) + 3",
                "6 + 4 + 5 + 8 + (2 * (2 * 2 + 8) * 9 * 7) + 6",
                "5 * 4 + 7 + (2 + 6 * 3 + (2 * 2 * 2))",
                "(8 * 3 + (2 * 6 * 4 * 2 * 9) + 5 + 9 * 8) * 5 + 7",
                "5 * 5 * (3 + 4 * 3) + ((7 * 3 + 5 + 8) + 2) + 6",
                "((9 * 5) + 4) * 6 + 4 * ((5 * 2 * 9) + 5 + 3) + 6 + 3",
                "9 * (2 + 4 + 4 * (5 * 9 * 3 + 4 * 5 + 8) * (3 * 7) * 6) + 6",
                "(3 + 2 * 5 + 5) * (9 * 3 + 5 * 7) + 3 * 9",
                "6 * ((7 + 9 + 9 * 2 * 4) * 8) + 9 + (6 * 8) * 3",
                "4 + 9 * 8 + (3 * 4 * 4 * 7 * (7 * 6 + 7 * 2 * 7 + 8))",
                "(7 + 7) + 7 * ((7 + 3 * 4 + 8 + 8 + 6) + 9 + 2 * 6 * 9 + 2)",
                "9 + 7 + 9 * 9 + 5 + 5",
                "8 + 2 + 3 + 2 + 6",
                "8 + (4 * (3 * 2) + 9 + 6)",
                "9 * 8 * 2 + (6 + 6 * 9) + 8 * 8",
                "7 + 4 * 2 * 5 + 4 + 7",
                "5 * 8 * 4 * 2 * (6 + 5 + 2)",
                "3 * 5 * (3 + 9 * 2) * (3 + 5)",
                "3 * 6 * 7 * (2 + 8 * (8 + 6 + 3 * 9 + 9 * 5) * 3 + 8 * (6 + 3 * 5 + 8 + 4)) * (9 + 5 + 9) * 5",
                "5 * 3",
                "(3 * 2 + 7 + 8) * 2",
                "((7 + 8 * 4) + 6 + 9 * (6 + 5 + 4 + 9 + 7 * 6) + 9 + 5) + 5 * 4",
                "3 * 9 * 6 * 4 * ((4 + 8 + 6) + (4 + 6 * 2 + 9 + 7 * 2) + 7 * 2 + (5 + 9 * 2 + 2))",
                "(8 + 6 + 5) * 4 * 8",
                "7 * 4 + 8 + (4 + 9 + 3 + 5 + 2 + 6) + (7 + 2 * 5 * 7) + 3",
                "6 + 7 * 4 + (8 * 3 + 8 * (7 * 5 + 3 * 4 * 5) * 9 * 2) * 2 + 3",
                "9 + 6 * (6 * (4 + 7)) + 4 * 7",
                "(4 + 5 + 8) * 8 + (8 * 7 + 9 * 5) * 9",
                "5 * 3 * (9 * 9 + 5 * 6 * 7 + 6) + 7 + 5",
                "7 + 3 * 7 * ((4 + 6 * 4 + 8) + 5 + 9 + 7 * 5)",
                "9 * (8 + 9 + 3 * 5 * (4 + 6 * 4 + 7 + 7) + (3 * 8 * 2 + 2 + 8)) * 8 + 8 * (3 * 9) + 6",
                "2 + (7 * 9 * 3) + (5 * 8 * 8 * (2 + 2 * 2 * 6 * 7 + 6)) * (9 * 6 + 2)",
                "8 * (4 + (8 + 3 * 4 * 2 * 5) * (8 * 2) + (2 + 2 + 7 * 6 + 3 * 2) + (2 * 7)) * 7",
                "3 * 7 * 3 + 4 + (2 + (6 * 3) + (2 + 5 + 8 + 3 * 3) + 2 + (4 * 7 + 2)) * 4",
                "(7 * 7 + 5 * 8) * 3 + 2 + 9 + (2 * 8 * 4 + 7 + 4 * 8) * (7 + 8 * 5)",
                "2 * ((7 * 5 * 4) * (4 + 7 * 9 + 3 + 3 * 6) + (5 + 5 + 9 + 7 * 8) * (5 * 2 * 8 + 4 * 6) + (5 + 4 + 3 * 9 * 4 + 9)) * 6 * 8 * 5",
                "(8 + 2) * 3 + 8 * ((5 * 9 * 7 * 7) * 7) + 8",
                "(3 + 7 + 9 + 7) * 9 * (2 + 5 * 8 * 9) + (5 * 5 + 9) + (5 + (4 * 4 * 7 * 9) + 4 * (2 * 2 + 5))",
                "3 + (4 + 8 + 3 + 4 + 7 + 6) + 4 + 3 * 4 + ((5 * 6) + 2 * 5 * 2 + 8 * 3)"
        )
    }
}